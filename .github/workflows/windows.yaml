# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Scheduled workflows run on the latest commit on the default or base branch
    - cron: "0 0 1 * *"
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for manually triggering workflow"
        required: true

jobs:
  ci:
    runs-on: windows-2022
    strategy:
      matrix:
        nox-session:
          - unit-3.9
          - unit-3.10
          - cover
          - functional-3.11
          - doctest
    steps:
      - uses: actions/cache@v3
        with:
          path: ~\AppData\Local\pip\Cache
          key: windows-pip

      - uses: actions/checkout@v3

      - name: Update host Python packaging
        shell: cmd
        run: |
          python -m pip install --upgrade nox pip setuptools wheel

      # MinGW is installed (by default) via Chocolatey:
      # - https://github.com/actions/runner-images/blob/win22%2F20230724.1/images/win/toolsets/toolset-2022.json#L165
      # - https://community.chocolatey.org/packages/mingw/11.2.0.07112021
      # - https://github.com/actions/runner-images/issues/6103
      - name: Add MinGW bin dir to PATH
        shell: powershell
        run: |
          "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $env:GITHUB_PATH

      - name: Show gfortran version
        shell: powershell
        run: |
          gfortran --version

      - name: Invoke nox
        shell: powershell
        run: |
          nox --session "${{ matrix.nox-session }}"
